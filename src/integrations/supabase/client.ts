// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Check for required environment variables
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('Missing Supabase environment variables:');
  console.log('VITE_SUPABASE_URL:', supabaseUrl ? 'Set' : 'Missing');
  console.log('VITE_SUPABASE_ANON_KEY:', supabaseAnonKey ? 'Set' : 'Missing');
  
  throw new Error(
    'Missing Supabase environment variables. ' +
    'Please check your .env file and ensure VITE_SUPABASE_URL ' +
    'and VITE_SUPABASE_ANON_KEY are set.'
  );
}

// Configure auth options
const authOptions = {
  autoRefreshToken: true,
  persistSession: true,
  detectSessionInUrl: true,
  debug: process.env.NODE_ENV === 'development',
  flowType: 'pkce' as const,
};

console.log('Initializing Supabase client with URL:', supabaseUrl);

// Create the Supabase client
export const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey, {
  auth: authOptions,
  global: {
    headers: {
      'X-Client-Info': 'campus-taskhub-connect/v1.0',
    },
  },
});

// Helper to get the Supabase URL with error handling
export const getSupabaseUrl = (): string => {
  if (!supabaseUrl) {
    throw new Error('VITE_SUPABASE_URL is not set in environment variables');
  }
  return supabaseUrl;
};

// Helper to get the current session
export const getCurrentSession = async () => {
  const { data, error } = await supabase.auth.getSession();
  if (error) {
    console.error('Error getting session:', error);
    throw error;
  }
  return data.session;
};